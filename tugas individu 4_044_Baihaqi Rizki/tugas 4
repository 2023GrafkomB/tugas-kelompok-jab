<!DOCTYPE html>
<html>
  <head>
    <meta charset="utf-8">
    <title>Three.js Example</title>
    <style>
      body {
        margin: 0;
      }
      canvas {
        display: block;
      }
    </style>
  </head>
  <body>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/three.js/r128/three.min.js"></script>

    <script>
      const scene = new THREE.Scene();

      const camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);
      camera.position.z = 5;

      const renderer = new THREE.WebGLRenderer();
      renderer.setSize(window.innerWidth, window.innerHeight);
      document.body.appendChild(renderer.domElement);

      const cubeGeometry = new THREE.BoxGeometry();
      const cubeMaterial = new THREE.MeshPhongMaterial({ color: 0x00ff00 });
      const cube = new THREE.Mesh(cubeGeometry, cubeMaterial);
      scene.add(cube);

      const sphereGeometry = new THREE.SphereGeometry(1, 32, 32);
      const sphereMaterial = new THREE.MeshPhongMaterial({ color: 0xff0000 });
      const sphere = new THREE.Mesh(sphereGeometry, sphereMaterial);
      sphere.position.set(2, 0, 0);
      scene.add(sphere);

      const torusGeometry = new THREE.TorusGeometry(1, 0.2, 16, 100);
      const torusMaterial = new THREE.MeshPhongMaterial({ color: 0x0000ff });
      const torus = new THREE.Mesh(torusGeometry, torusMaterial);
      torus.position.set(-2, 0, 0);
      scene.add(torus);

      const ambientLight = new THREE.AmbientLight(0x404040);
      scene.add(ambientLight);

      const directionalLight = new THREE.DirectionalLight(0xffffff, 0.5);
      directionalLight.position.set(1, 1, 1);
      scene.add(directionalLight);

      const textureLoader = new THREE.TextureLoader();
      const texture = textureLoader.load('tekstur.png');
      cubeMaterial.map = texture;

      // Add fog
      scene.fog = new THREE.Fog(0x000000, 1, 10);

      // Add shadows
      const shadowLight = new THREE.DirectionalLight(0xffffff, 1);
      shadowLight.castShadow = true;
      shadowLight.position.set(3, 4, 2);
      scene.add(shadowLight);

      cube.castShadow = true;
      cube.receiveShadow = true;
      sphere.castShadow = true;
      sphere.receiveShadow = true;
      torus.castShadow = true;
      torus.receiveShadow = true;

      // Add a panorama background
      const loader = new THREE.CubeTextureLoader();
      const textureCube = loader.load([
        'back.png',
        'bottom.png',
        'front.png',
        'left.png',
        'right.png',
        'top.png',
      ]);
      scene.background = textureCube;

      // Add orbit controls
      const controls = new THREE.OrbitControls(camera, renderer.domElement);

      // Animation loop
      const animate = () => {
        requestAnimationFrame(animate);
        cube.rotation.x += 0.01;
        cube.rotation.y += 0.01;
        sphere.rotation.x += 0.01;
        sphere.rotation.y += 0.01;
        torus.rotation.x += 0.01;
        torus.rotation.y += 0.01;
        renderer.render(scene, camera);
      };

      animate();
    </script>
  </body>
</html>
